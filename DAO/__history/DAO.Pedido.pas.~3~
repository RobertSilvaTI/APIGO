unit DAO.Pedido;

interface

uses FireDAC.Comp.Client, FireDAC.DApt, Data.DB, System.JSON, System.SysUtils,
System.StrUtils, Dataset.Serialize, DAO.Connection;

type
  TPedido = class
    private
      FConn: TFDConnection;
      procedure Validate(operacao: string);
    public
      constructor Create;
      destructor Destroy; override;

      function Listar(cod_cidade: string): TJSONArray;
  end;

implementation

{ TPedido }

constructor TPedido.Create;
begin
  FConn := TConnection.CreateConnection;
end;

destructor TPedido.Destroy;
begin
  if Assigned(FConn) then
    FConn.Free;
  inherited;
end;

function TPedido.Listar(cod_cidade: string): TJSONArray;
var
  qry: TFDQuery;
begin
  Validate('Listar');

  try
    qry := TFDQuery.Create(nil);
    qry.Connection := FConn;

    with qry do
    begin
      Active := False;
      SQL.Clear;
      SQL.Add('select * from tab_banner');
      SQL.Add('where cod_cidade = :cod_cidade order by ordem');

      ParamByName('cod_cidade').Value := cod_cidade;

      Active := True;
    end;

    Result := qry.ToJSONArray();

  finally
    qry.Free;
  end;
end;

procedure TPedido.Validate(operacao: string);
begin
//  if (COD_CUPOM.IsEmpty) and MatchStr(operacao, ['Validar'])  then
//    raise Exception.Create('Cupom não informado!');
end;

end.
